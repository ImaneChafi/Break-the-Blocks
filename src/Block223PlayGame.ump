external interface Comparable {}

class Game {
	lazy Boolean isPublished; // Cannot edit a published game
	before setIsPublished {
		if (isPublished) return wasSet;
	}
}

class GameSession {
	autounique id;
	immutable Boolean ofTestMode;
	Integer currentLevelNr = 1; // This represents current number of the level
  	Integer currentLife = 3;
  	Integer score = 0;
  	* -- 1 Game;
  	* -- 1 User;
  	* -- 1 Block223;
}

class SpecificBlock {
	autounique id;
	* -- 1 Block;
	* -<@> 1 GameSession;
}

class SpecificBall {
	1 -<@> 1 GameSession;
  	Boolean isOutBounds;
  	Integer positionX;
  	Integer positionY;
        int speed;
}

class SpecificPaddle {
	1 -<@> 1 GameSession;
  	Integer positionX;
  	immutable Integer positionY;
}

class HallOfFameEntry {
	depend java.lang.Comparable;
	isA Comparable;
	Integer score;
	* -- 1 Game;
	* -- 1 User;
    public int compareTo(Object aHallOfFameEntry) {
    	HallOfFameEntry myHallOfFameEntry = (HallOfFameEntry)aHallOfFameEntry;
        return toString().compareTo(myHallOfFameEntry.toString());
    }
}